apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: argocds.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: ArgoCD
    listKind: ArgoCDList
    plural: argocds
    singular: argocd
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ArgoCD is the Schema for the argocds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ArgoCDSpec defines the desired state of ArgoCD
            properties:
              applicationInstanceLabelKey:
                description: ApplicationInstanceLabelKey is the key name where Argo
                  CD injects the app name as a tracking label.
                type: string
              applicationSet:
                description: ArgoCDApplicationSet defines whether the Argo CD ApplicationSet
                  controller should be installed.
                properties:
                  image:
                    description: Image is the Argo CD ApplicationSet image (optional)
                    type: string
                  resources:
                    description: Resources defines the Compute Resources required
                      by the container for ApplicationSet.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  version:
                    description: Version is the Argo CD ApplicationSet image tag.
                      (optional)
                    type: string
                type: object
              configManagementPlugins:
                description: ConfigManagementPlugins is used to specify additional
                  config management plugins.
                type: string
              controller:
                description: Controller defines the Application Controller options
                  for ArgoCD.
                properties:
                  appSync:
                    description: "AppSync is used to control the sync frequency, by
                      default the ArgoCD controller polls Git every 3m by default.
                      \n Set this to a duration, e.g. 10m or 600s to control the synchronisation
                      frequency."
                    type: string
                  processors:
                    description: Processors contains the options for the Application
                      Controller processors.
                    properties:
                      operation:
                        description: Operation is the number of application operation
                          processors.
                        format: int32
                        type: integer
                      status:
                        description: Status is the number of application status processors.
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: Resources defines the Compute Resources required
                      by the container for the Application Controller.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                type: object
              dex:
                description: Dex defines the Dex server options for ArgoCD.
                properties:
                  config:
                    description: Config is the dex connector configuration.
                    type: string
                  image:
                    description: Image is the Dex container image.
                    type: string
                  openShiftOAuth:
                    description: OpenShiftOAuth enables OpenShift OAuth authentication
                      for the Dex server.
                    type: boolean
                  resources:
                    description: Resources defines the Compute Resources required
                      by the container for Dex.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  version:
                    description: Version is the Dex container image tag.
                    type: string
                type: object
              disableAdmin:
                description: DisableAdmin will disable the admin user.
                type: boolean
              gaAnonymizeUsers:
                description: GAAnonymizeUsers toggles user IDs being hashed before
                  sending to google analytics.
                type: boolean
              gaTrackingID:
                description: GATrackingID is the google analytics tracking ID to use.
                type: string
              grafana:
                description: Grafana defines the Grafana server options for ArgoCD.
                properties:
                  enabled:
                    description: Enabled will toggle Grafana support globally for
                      ArgoCD.
                    type: boolean
                  host:
                    description: Host is the hostname to use for Ingress/Route resources.
                    type: string
                  image:
                    description: Image is the Grafana container image.
                    type: string
                  ingress:
                    description: Ingress defines the desired state for an Ingress
                      for the Grafana component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to apply
                          to the Ingress.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the Ingress.
                        type: boolean
                      path:
                        description: Path used for the Ingress resource.
                        type: string
                      tls:
                        description: TLS configuration. Currently the Ingress only
                          supports a single TLS port, 443. If multiple members of
                          this list specify different hosts, they will be multiplexed
                          on the same port according to the hostname specified through
                          the SNI TLS extension, if the ingress controller fulfilling
                          the ingress supports SNI.
                        items:
                          description: IngressTLS describes the transport layer security
                            associated with an Ingress.
                          properties:
                            hosts:
                              description: Hosts are a list of hosts included in the
                                TLS certificate. The values in this list must match
                                the name/s used in the tlsSecret. Defaults to the
                                wildcard host setting for the loadbalancer controller
                                fulfilling this Ingress, if left unspecified.
                              items:
                                type: string
                              type: array
                            secretName:
                              description: SecretName is the name of the secret used
                                to terminate SSL traffic on 443. Field is left optional
                                to allow SSL routing based on SNI hostname alone.
                                If the SNI host in a listener conflicts with the "Host"
                                header field used by an IngressRule, the SNI host
                                is used for termination and value of the Host header
                                is used for routing.
                              type: string
                          type: object
                        type: array
                    required:
                    - enabled
                    type: object
                  resources:
                    description: Resources defines the Compute Resources required
                      by the container for Grafana.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  route:
                    description: Route defines the desired state for an OpenShift
                      Route for the Grafana component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to use
                          for the Route resource.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the OpenShift
                          Route.
                        type: boolean
                      path:
                        description: Path the router watches for, to route traffic
                          for to the service.
                        type: string
                      tls:
                        description: TLS provides the ability to configure certificates
                          and termination for the Route.
                        properties:
                          caCertificate:
                            description: caCertificate provides the cert authority
                              certificate contents
                            type: string
                          certificate:
                            description: certificate provides certificate contents
                            type: string
                          destinationCACertificate:
                            description: destinationCACertificate provides the contents
                              of the ca certificate of the final destination.  When
                              using reencrypt termination this file should be provided
                              in order to have routers use it for health checks on
                              the secure connection. If this field is not specified,
                              the router may provide its own destination CA and perform
                              hostname validation using the short service name (service.namespace.svc),
                              which allows infrastructure generated certificates to
                              automatically verify.
                            type: string
                          insecureEdgeTerminationPolicy:
                            description: "insecureEdgeTerminationPolicy indicates
                              the desired behavior for insecure connections to a route.
                              While each router may make its own decisions on which
                              ports to expose, this is normally port 80. \n * Allow
                              - traffic is sent to the server on the insecure port
                              (default) * Disable - no traffic is allowed on the insecure
                              port. * Redirect - clients are redirected to the secure
                              port."
                            type: string
                          key:
                            description: key provides key file contents
                            type: string
                          termination:
                            description: termination indicates termination type.
                            type: string
                        required:
                        - termination
                        type: object
                      wildcardPolicy:
                        description: WildcardPolicy if any for the route. Currently
                          only 'Subdomain' or 'None' is allowed.
                        type: string
                    required:
                    - enabled
                    type: object
                  size:
                    description: Size is the replica count for the Grafana Deployment.
                    format: int32
                    type: integer
                  version:
                    description: Version is the Grafana container image tag.
                    type: string
                required:
                - enabled
                type: object
              ha:
                description: HA options for High Availability support for the Redis
                  component.
                properties:
                  enabled:
                    description: Enabled will toggle HA support globally for Argo
                      CD.
                    type: boolean
                  redisProxyImage:
                    description: RedisProxyImage is the Redis HAProxy container image.
                    type: string
                  redisProxyVersion:
                    description: RedisProxyVersion is the Redis HAProxy container
                      image tag.
                    type: string
                  resources:
                    description: Resources defines the Compute Resources required
                      by the container for HA.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                required:
                - enabled
                type: object
              helpChatText:
                description: HelpChatText is the text for getting chat help, defaults
                  to "Chat now!"
                type: string
              helpChatURL:
                description: HelpChatURL is the URL for getting chat help, this will
                  typically be your Slack channel for support.
                type: string
              image:
                description: Image is the ArgoCD container image for all ArgoCD components.
                type: string
              import:
                description: Import is the import/restore options for ArgoCD.
                properties:
                  name:
                    description: Name of an ArgoCDExport from which to import data.
                    type: string
                  namespace:
                    description: Namespace for the ArgoCDExport, defaults to the same
                      namespace as the ArgoCD.
                    type: string
                required:
                - name
                type: object
              initialRepositories:
                description: InitialRepositories to configure Argo CD with upon creation
                  of the cluster.
                type: string
              initialSSHKnownHosts:
                description: InitialSSHKnownHosts defines the SSH known hosts data
                  upon creation of the cluster for connecting Git repositories via
                  SSH.
                properties:
                  excludedefaulthosts:
                    description: ExcludeDefaultHosts describes whether you would like
                      to include the default list of SSH Known Hosts provided by ArgoCD.
                    type: boolean
                  keys:
                    description: Keys describes a custom set of SSH Known Hosts that
                      you would like to have included in your ArgoCD server.
                    type: string
                type: object
              kustomizeBuildOptions:
                description: KustomizeBuildOptions is used to specify build options/parameters
                  to use with `kustomize build`.
                type: string
              oidcConfig:
                description: OIDCConfig is the OIDC configuration as an alternative
                  to dex.
                type: string
              prometheus:
                description: Prometheus defines the Prometheus server options for
                  ArgoCD.
                properties:
                  enabled:
                    description: Enabled will toggle Prometheus support globally for
                      ArgoCD.
                    type: boolean
                  host:
                    description: Host is the hostname to use for Ingress/Route resources.
                    type: string
                  ingress:
                    description: Ingress defines the desired state for an Ingress
                      for the Prometheus component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to apply
                          to the Ingress.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the Ingress.
                        type: boolean
                      path:
                        description: Path used for the Ingress resource.
                        type: string
                      tls:
                        description: TLS configuration. Currently the Ingress only
                          supports a single TLS port, 443. If multiple members of
                          this list specify different hosts, they will be multiplexed
                          on the same port according to the hostname specified through
                          the SNI TLS extension, if the ingress controller fulfilling
                          the ingress supports SNI.
                        items:
                          description: IngressTLS describes the transport layer security
                            associated with an Ingress.
                          properties:
                            hosts:
                              description: Hosts are a list of hosts included in the
                                TLS certificate. The values in this list must match
                                the name/s used in the tlsSecret. Defaults to the
                                wildcard host setting for the loadbalancer controller
                                fulfilling this Ingress, if left unspecified.
                              items:
                                type: string
                              type: array
                            secretName:
                              description: SecretName is the name of the secret used
                                to terminate SSL traffic on 443. Field is left optional
                                to allow SSL routing based on SNI hostname alone.
                                If the SNI host in a listener conflicts with the "Host"
                                header field used by an IngressRule, the SNI host
                                is used for termination and value of the Host header
                                is used for routing.
                              type: string
                          type: object
                        type: array
                    required:
                    - enabled
                    type: object
                  route:
                    description: Route defines the desired state for an OpenShift
                      Route for the Prometheus component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to use
                          for the Route resource.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the OpenShift
                          Route.
                        type: boolean
                      path:
                        description: Path the router watches for, to route traffic
                          for to the service.
                        type: string
                      tls:
                        description: TLS provides the ability to configure certificates
                          and termination for the Route.
                        properties:
                          caCertificate:
                            description: caCertificate provides the cert authority
                              certificate contents
                            type: string
                          certificate:
                            description: certificate provides certificate contents
                            type: string
                          destinationCACertificate:
                            description: destinationCACertificate provides the contents
                              of the ca certificate of the final destination.  When
                              using reencrypt termination this file should be provided
                              in order to have routers use it for health checks on
                              the secure connection. If this field is not specified,
                              the router may provide its own destination CA and perform
                              hostname validation using the short service name (service.namespace.svc),
                              which allows infrastructure generated certificates to
                              automatically verify.
                            type: string
                          insecureEdgeTerminationPolicy:
                            description: "insecureEdgeTerminationPolicy indicates
                              the desired behavior for insecure connections to a route.
                              While each router may make its own decisions on which
                              ports to expose, this is normally port 80. \n * Allow
                              - traffic is sent to the server on the insecure port
                              (default) * Disable - no traffic is allowed on the insecure
                              port. * Redirect - clients are redirected to the secure
                              port."
                            type: string
                          key:
                            description: key provides key file contents
                            type: string
                          termination:
                            description: termination indicates termination type.
                            type: string
                        required:
                        - termination
                        type: object
                      wildcardPolicy:
                        description: WildcardPolicy if any for the route. Currently
                          only 'Subdomain' or 'None' is allowed.
                        type: string
                    required:
                    - enabled
                    type: object
                  size:
                    description: Size is the replica count for the Prometheus StatefulSet.
                    format: int32
                    type: integer
                required:
                - enabled
                type: object
              rbac:
                description: RBAC defines the RBAC configuration for Argo CD.
                properties:
                  defaultPolicy:
                    description: DefaultPolicy is the name of the default role which
                      Argo CD will falls back to, when authorizing API requests (optional).
                      If omitted or empty, users may be still be able to login, but
                      will see no apps, projects, etc...
                    type: string
                  policy:
                    description: 'Policy is CSV containing user-defined RBAC policies
                      and role definitions. Policy rules are in the form:   p, subject,
                      resource, action, object, effect Role definitions and bindings
                      are in the form:   g, subject, inherited-subject See https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md
                      for additional information.'
                    type: string
                  scopes:
                    description: 'Scopes controls which OIDC scopes to examine during
                      rbac enforcement (in addition to `sub` scope). If omitted, defaults
                      to: ''[groups]''.'
                    type: string
                type: object
              redis:
                description: Redis defines the Redis server options for ArgoCD.
                properties:
                  image:
                    description: Image is the Redis container image.
                    type: string
                  resources:
                    description: Resources defines the Compute Resources required
                      by the container for Redis.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  version:
                    description: Version is the Redis container image tag.
                    type: string
                type: object
              repo:
                description: Repo defines the repo server options for Argo CD.
                properties:
                  autotls:
                    description: 'AutoTLS specifies the method to use for automatic
                      TLS configuration for the repo server The value specified here
                      can currently be: - openshift - Use the OpenShift service CA
                      to request TLS config'
                    type: string
                  mountsatoken:
                    description: MountSAToken describes whether you would like to
                      have the Repo server mount the service account token
                    type: boolean
                  pluginContainers:
                    description: PluginContainers defines the sidecar containers for
                      any user-defined version 2.0 Configuration Management Plugins
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references
                            $(VAR_NAME) are expanded using the container''s environment.
                            If a variable cannot be resolved, the reference in the
                            input string will be unchanged. The $(VAR_NAME) syntax
                            can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. Cannot be updated. More info:
                            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The docker image''s ENTRYPOINT is used if this is not
                            provided. Variable references $(VAR_NAME) are expanded
                            using the container''s environment. If a variable cannot
                            be resolved, the reference in the input string will be
                            unchanged. The $(VAR_NAME) syntax can be escaped with
                            a double $$, ie: $$(VAR_NAME). Escaped references will
                            never be expanded, regardless of whether the variable
                            exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the
                            container. Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previous defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  The $(VAR_NAME) syntax can be escaped with a double
                                  $$, ie: $$(VAR_NAME). Escaped references will never
                                  be expanded, regardless of whether the variable
                                  exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, metadata.labels,
                                      metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                      status.hostIP, status.podIP, status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must
                            be a C_IDENTIFIER. All invalid keys will be reported as
                            an event when the container is starting. When a key exists
                            in multiple sources, the value associated with the last
                            source will take precedence. Values defined by an Env
                            with a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management
                            to default or override container images in workload controllers
                            like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take
                            in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after
                                a container is created. If the handler fails, the
                                container is terminated and restarted according to
                                its restart policy. Other management of the container
                                blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should
                                    be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving
                                    a TCP port. TCP hooks not yet supported TODO:
                                    implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a
                                container is terminated due to an API request or management
                                event such as liveness/startup probe failure, preemption,
                                resource contention, etc. The handler is not called
                                if the container crashes or exits. The reason for
                                termination is passed to the handler. The Pod''s termination
                                grace period countdown begins before the PreStop hooked
                                is executed. Regardless of the outcome of the handler,
                                the container will eventually terminate within the
                                Pod''s termination grace period. Other management
                                of the container blocks until the hook completes or
                                until the termination grace period is reached. More
                                info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should
                                    be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving
                                    a TCP port. TCP hooks not yet supported TODO:
                                    implement a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container
                            will be restarted if the probe fails. Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should
                                be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving
                                a TCP port. TCP hooks not yet supported TODO: implement
                                a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container.
                            Exposing a port here gives the system additional information
                            about the network connections a container uses, but is
                            primarily informational. Not specifying a port here DOES
                            NOT prevent that port from being exposed. Any port which
                            is listening on the default "0.0.0.0" address inside a
                            container will be accessible from the network. Cannot
                            be updated.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's
                                  IP address. This must be a valid port number, 0
                                  < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host.
                                  If specified, this must be a valid port number,
                                  0 < x < 65536. If HostNetwork is specified, this
                                  must match ContainerPort. Most containers do not
                                  need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a
                                  pod must have a unique name. Name for the port that
                                  can be referred to by services.
                                type: string
                              protocol:
                                description: Protocol for port. Must be UDP, TCP,
                                  or SCTP. Defaults to "TCP".
                                type: string
                                default: TCP
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness.
                            Container will be removed from service endpoints if the
                            probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should
                                be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving
                                a TCP port. TCP hooks not yet supported TODO: implement
                                a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resources:
                          description: 'Compute Resources required by this container.
                            Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        securityContext:
                          description: 'Security options the pod should run with.
                            More info: https://kubernetes.io/docs/concepts/policy/security-context/
                            More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully
                            initialized. If specified, no other probes are executed
                            until this completes successfully. If this probe fails,
                            the Pod will be restarted, just as if the livenessProbe
                            failed. This can be used to provide different probe parameters
                            at the beginning of a Pod''s lifecycle, when it might
                            take a long time to load data or warm a cache, than during
                            steady-state operation. This cannot be updated. This is
                            a beta feature enabled by the StartupProbe feature flag.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should
                                be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving
                                a TCP port. TCP hooks not yet supported TODO: implement
                                a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer
                            for stdin in the container runtime. If this is not set,
                            reads from stdin in the container will always result in
                            EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close
                            the stdin channel after it has been opened by a single
                            attach. When stdin is true the stdin stream will remain
                            open across multiple attach sessions. If stdinOnce is
                            set to true, stdin is opened on container start, is empty
                            until the first client attaches to stdin, and then remains
                            open and accepts data until the client disconnects, at
                            which time stdin is closed and remains closed until the
                            container is restarted. If this flag is false, a container
                            processes that reads from stdin will never receive an
                            EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which
                            the container''s termination message will be written is
                            mounted into the container''s filesystem. Message written
                            is intended to be brief final status, such as an assertion
                            failure message. Will be truncated by the node if greater
                            than 4096 bytes. The total message length across all containers
                            will be limited to 12kb. Defaults to /dev/termination-log.
                            Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should
                            be populated. File will use the contents of terminationMessagePath
                            to populate the container status message on both success
                            and failure. FallbackToLogsOnError will use the last chunk
                            of container log output if the termination message file
                            is empty and the container exited with an error. The log
                            output is limited to 2048 bytes or 80 lines, whichever
                            is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY
                            for itself, also requires 'stdin' to be true. Default
                            is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might
                            be configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  resources:
                    description: Resources defines the Compute Resources required
                      by the container for Redis.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  serviceaccount:
                    description: ServiceAccount defines the ServiceAccount user that
                      you would like the Repo server to use
                    type: string
                  verifytls:
                    description: VerifyTLS defines whether repo server API should
                      be accessed using strict TLS validation
                    type: boolean
                type: object
              repositoryCredentials:
                description: RepositoryCredentials are the Git pull credentials to
                  configure Argo CD with upon creation of the cluster.
                type: string
              resourceCustomizations:
                description: 'ResourceCustomizations customizes resource behavior.
                  Keys are in the form: group/Kind.'
                type: string
              resourceExclusions:
                description: ResourceExclusions is used to completely ignore entire
                  classes of resource group/kinds.
                type: string
              resourceInclusions:
                description: ResourceInclusions is used to only include specific group/kinds
                  in the reconciliation process.
                type: string
              server:
                description: Server defines the options for the ArgoCD Server component.
                properties:
                  autoscale:
                    description: Autoscale defines the autoscale options for the Argo
                      CD Server component.
                    properties:
                      enabled:
                        description: Enabled will toggle autoscaling support for the
                          Argo CD Server component.
                        type: boolean
                      hpa:
                        description: HPA defines the HorizontalPodAutoscaler options
                          for the Argo CD Server component.
                        properties:
                          maxReplicas:
                            description: upper limit for the number of pods that can
                              be set by the autoscaler; cannot be smaller than MinReplicas.
                            format: int32
                            type: integer
                          minReplicas:
                            description: minReplicas is the lower limit for the number
                              of replicas to which the autoscaler can scale down.  It
                              defaults to 1 pod.  minReplicas is allowed to be 0 if
                              the alpha feature gate HPAScaleToZero is enabled and
                              at least one Object or External metric is configured.  Scaling
                              is active as long as at least one metric value is available.
                            format: int32
                            type: integer
                          scaleTargetRef:
                            description: reference to scaled resource; horizontal
                              pod autoscaler will learn the current resource consumption
                              and will set the desired number of pods by using its
                              Scale subresource.
                            properties:
                              apiVersion:
                                description: API version of the referent
                                type: string
                              kind:
                                description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                                type: string
                              name:
                                description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          targetCPUUtilizationPercentage:
                            description: target average CPU utilization (represented
                              as a percentage of requested CPU) over all the pods;
                              if not specified the default autoscaling policy will
                              be used.
                            format: int32
                            type: integer
                        required:
                        - maxReplicas
                        - scaleTargetRef
                        type: object
                    required:
                    - enabled
                    type: object
                  grpc:
                    description: GRPC defines the state for the Argo CD Server GRPC
                      options.
                    properties:
                      host:
                        description: Host is the hostname to use for Ingress/Route
                          resources.
                        type: string
                      ingress:
                        description: Ingress defines the desired state for the Argo
                          CD Server GRPC Ingress.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations is the map of annotations to
                              apply to the Ingress.
                            type: object
                          enabled:
                            description: Enabled will toggle the creation of the Ingress.
                            type: boolean
                          path:
                            description: Path used for the Ingress resource.
                            type: string
                          tls:
                            description: TLS configuration. Currently the Ingress
                              only supports a single TLS port, 443. If multiple members
                              of this list specify different hosts, they will be multiplexed
                              on the same port according to the hostname specified
                              through the SNI TLS extension, if the ingress controller
                              fulfilling the ingress supports SNI.
                            items:
                              description: IngressTLS describes the transport layer
                                security associated with an Ingress.
                              properties:
                                hosts:
                                  description: Hosts are a list of hosts included
                                    in the TLS certificate. The values in this list
                                    must match the name/s used in the tlsSecret. Defaults
                                    to the wildcard host setting for the loadbalancer
                                    controller fulfilling this Ingress, if left unspecified.
                                  items:
                                    type: string
                                  type: array
                                secretName:
                                  description: SecretName is the name of the secret
                                    used to terminate SSL traffic on 443. Field is
                                    left optional to allow SSL routing based on SNI
                                    hostname alone. If the SNI host in a listener
                                    conflicts with the "Host" header field used by
                                    an IngressRule, the SNI host is used for termination
                                    and value of the Host header is used for routing.
                                  type: string
                              type: object
                            type: array
                        required:
                        - enabled
                        type: object
                    type: object
                  host:
                    description: Host is the hostname to use for Ingress/Route resources.
                    type: string
                  ingress:
                    description: Ingress defines the desired state for an Ingress
                      for the Argo CD Server component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to apply
                          to the Ingress.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the Ingress.
                        type: boolean
                      path:
                        description: Path used for the Ingress resource.
                        type: string
                      tls:
                        description: TLS configuration. Currently the Ingress only
                          supports a single TLS port, 443. If multiple members of
                          this list specify different hosts, they will be multiplexed
                          on the same port according to the hostname specified through
                          the SNI TLS extension, if the ingress controller fulfilling
                          the ingress supports SNI.
                        items:
                          description: IngressTLS describes the transport layer security
                            associated with an Ingress.
                          properties:
                            hosts:
                              description: Hosts are a list of hosts included in the
                                TLS certificate. The values in this list must match
                                the name/s used in the tlsSecret. Defaults to the
                                wildcard host setting for the loadbalancer controller
                                fulfilling this Ingress, if left unspecified.
                              items:
                                type: string
                              type: array
                            secretName:
                              description: SecretName is the name of the secret used
                                to terminate SSL traffic on 443. Field is left optional
                                to allow SSL routing based on SNI hostname alone.
                                If the SNI host in a listener conflicts with the "Host"
                                header field used by an IngressRule, the SNI host
                                is used for termination and value of the Host header
                                is used for routing.
                              type: string
                          type: object
                        type: array
                    required:
                    - enabled
                    type: object
                  insecure:
                    description: Insecure toggles the insecure flag.
                    type: boolean
                  resources:
                    description: Resources defines the Compute Resources required
                      by the container for the Argo CD server component.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  route:
                    description: Route defines the desired state for an OpenShift
                      Route for the Argo CD Server component.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is the map of annotations to use
                          for the Route resource.
                        type: object
                      enabled:
                        description: Enabled will toggle the creation of the OpenShift
                          Route.
                        type: boolean
                      path:
                        description: Path the router watches for, to route traffic
                          for to the service.
                        type: string
                      tls:
                        description: TLS provides the ability to configure certificates
                          and termination for the Route.
                        properties:
                          caCertificate:
                            description: caCertificate provides the cert authority
                              certificate contents
                            type: string
                          certificate:
                            description: certificate provides certificate contents
                            type: string
                          destinationCACertificate:
                            description: destinationCACertificate provides the contents
                              of the ca certificate of the final destination.  When
                              using reencrypt termination this file should be provided
                              in order to have routers use it for health checks on
                              the secure connection. If this field is not specified,
                              the router may provide its own destination CA and perform
                              hostname validation using the short service name (service.namespace.svc),
                              which allows infrastructure generated certificates to
                              automatically verify.
                            type: string
                          insecureEdgeTerminationPolicy:
                            description: "insecureEdgeTerminationPolicy indicates
                              the desired behavior for insecure connections to a route.
                              While each router may make its own decisions on which
                              ports to expose, this is normally port 80. \n * Allow
                              - traffic is sent to the server on the insecure port
                              (default) * Disable - no traffic is allowed on the insecure
                              port. * Redirect - clients are redirected to the secure
                              port."
                            type: string
                          key:
                            description: key provides key file contents
                            type: string
                          termination:
                            description: termination indicates termination type.
                            type: string
                        required:
                        - termination
                        type: object
                      wildcardPolicy:
                        description: WildcardPolicy if any for the route. Currently
                          only 'Subdomain' or 'None' is allowed.
                        type: string
                    required:
                    - enabled
                    type: object
                  service:
                    description: Service defines the options for the Service backing
                      the ArgoCD Server component.
                    properties:
                      type:
                        description: Type is the ServiceType to use for the Service
                          resource.
                        type: string
                    required:
                    - type
                    type: object
                type: object
              sso:
                description: SSO defines the Single Sign-on configuration for Argo
                  CD
                properties:
                  provider:
                    description: Provider installs and configures the given SSO Provider
                      with Argo CD.
                    type: string
                  verifyTLS:
                    description: VerifyTLS set to false disables strict TLS validation.
                    type: boolean
                type: object
              statusBadgeEnabled:
                description: StatusBadgeEnabled toggles application status badge feature.
                type: boolean
              tls:
                description: TLS defines the TLS options for ArgoCD.
                properties:
                  ca:
                    description: CA defines the CA options.
                    properties:
                      configMapName:
                        description: ConfigMapName is the name of the ConfigMap containing
                          the CA Certificate.
                        type: string
                      secretName:
                        description: SecretName is the name of the Secret containing
                          the CA Certificate and Key.
                        type: string
                    type: object
                  initialCerts:
                    additionalProperties:
                      type: string
                    description: InitialCerts defines custom TLS certificates upon
                      creation of the cluster for connecting Git repositories via
                      HTTPS.
                    type: object
                type: object
              usersAnonymousEnabled:
                description: UsersAnonymousEnabled toggles anonymous user access.
                  The anonymous users get default role permissions specified argocd-rbac-cm.
                type: boolean
              version:
                description: Version is the tag to use with the ArgoCD container image
                  for all ArgoCD components.
                type: string
            type: object
          status:
            description: ArgoCDStatus defines the observed state of ArgoCD
            properties:
              applicationController:
                description: 'ApplicationController is a simple, high-level summary
                  of where the Argo CD application controller component is in its
                  lifecycle. There are five possible ApplicationController values:
                  Pending: The Argo CD application controller component has been accepted
                  by the Kubernetes system, but one or more of the required resources
                  have not been created. Running: All of the required Pods for the
                  Argo CD application controller component are in a Ready state. Failed:
                  At least one of the  Argo CD application controller component Pods
                  had a failure. Unknown: For some reason the state of the Argo CD
                  application controller component could not be obtained.'
                type: string
              dex:
                description: 'Dex is a simple, high-level summary of where the Argo
                  CD Dex component is in its lifecycle. There are five possible dex
                  values: Pending: The Argo CD Dex component has been accepted by
                  the Kubernetes system, but one or more of the required resources
                  have not been created. Running: All of the required Pods for the
                  Argo CD Dex component are in a Ready state. Failed: At least one
                  of the  Argo CD Dex component Pods had a failure. Unknown: For some
                  reason the state of the Argo CD Dex component could not be obtained.'
                type: string
              phase:
                description: 'Phase is a simple, high-level summary of where the ArgoCD
                  is in its lifecycle. There are five possible phase values: Pending:
                  The ArgoCD has been accepted by the Kubernetes system, but one or
                  more of the required resources have not been created. Available:
                  All of the resources for the ArgoCD are ready. Failed: At least
                  one resource has experienced a failure. Unknown: For some reason
                  the state of the ArgoCD phase could not be obtained.'
                type: string
              redis:
                description: 'Redis is a simple, high-level summary of where the Argo
                  CD Redis component is in its lifecycle. There are five possible
                  redis values: Pending: The Argo CD Redis component has been accepted
                  by the Kubernetes system, but one or more of the required resources
                  have not been created. Running: All of the required Pods for the
                  Argo CD Redis component are in a Ready state. Failed: At least one
                  of the  Argo CD Redis component Pods had a failure. Unknown: For
                  some reason the state of the Argo CD Redis component could not be
                  obtained.'
                type: string
              repo:
                description: 'Repo is a simple, high-level summary of where the Argo
                  CD Repo component is in its lifecycle. There are five possible repo
                  values: Pending: The Argo CD Repo component has been accepted by
                  the Kubernetes system, but one or more of the required resources
                  have not been created. Running: All of the required Pods for the
                  Argo CD Repo component are in a Ready state. Failed: At least one
                  of the  Argo CD Repo component Pods had a failure. Unknown: For
                  some reason the state of the Argo CD Repo component could not be
                  obtained.'
                type: string
              repoTLSChecksum:
                description: RepoTLSChecksum contains the SHA256 checksum of the latest
                  known state of tls.crt and tls.key in the argocd-repo-server-tls
                  secret.
                type: string
              server:
                description: 'Server is a simple, high-level summary of where the
                  Argo CD server component is in its lifecycle. There are five possible
                  server values: Pending: The Argo CD server component has been accepted
                  by the Kubernetes system, but one or more of the required resources
                  have not been created. Running: All of the required Pods for the
                  Argo CD server component are in a Ready state. Failed: At least
                  one of the  Argo CD server component Pods had a failure. Unknown:
                  For some reason the state of the Argo CD server component could
                  not be obtained.'
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
